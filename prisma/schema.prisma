// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  user_id                     Int   @id @default(autoincrement())
  user_name                   String
  email                       String?  @unique
  password                    String?
  first_name                  String?
  last_name                   String?
  phone_number                String?  @db.VarChar(15)
  profile_pic                 String?  @db.VarChar(255)
  bio                         String?
  status                      String?  @db.VarChar(50)
  theme                       String?  @db.VarChar(50)
  last_seen                   DateTime?
  is_deleted                  Boolean? @default(false)
  is_verified                 Boolean? @default(false)
  verification_token          String?
  verification_token_expiry   DateTime?
  reset_password_token        String?
  reset_password_token_expiry DateTime?
  created_at                  DateTime @default(now())
  updated_at                  DateTime @updatedAt
  contacts                    Int[]

  // Relations
 participants_one Participants[] @relation("UserOne")
  participants_two Participants[] @relation("UserTwo")
messages   Message[]

  @@map("users")
}
model Chat {
  id Int @id @default(autoincrement())
  participants Participants[]
  messages Message[]
}

model Participants{
  id Int @id @default(autoincrement())
  user1 Int
  user2 Int
  chat_id Int
 user_one User   @relation("UserOne", fields: [user1], references: [user_id])
  user_two User   @relation("UserTwo", fields: [user2], references: [user_id])
chat Chat @relation(fields: [chat_id], references: [id])  
        
}

model Message{
id Int @id @default(autoincrement())
chat_id Int
sender_id Int
message String
created_at DateTime @default(now())

chat Chat @relation(fields: [chat_id], references: [id])
sender User @relation(fields: [sender_id], references: [user_id])

  @@map("messages")
}